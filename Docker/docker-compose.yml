version: '3.8'

networks:
  timeoff_network:
    driver: bridge

services:
  api:
    image: maven:3.9.6-eclipse-temurin-21
    container_name: timeoff-api
    working_dir: /app
    ports:
      - "8080:8080"
    volumes:
      - ../api:/app
    environment:
      SPRING_DATASOURCE_URL: jdbc:mysql://mysql:3306/taskflowdb?useSSL=false&allowPublicKeyRetrieval=true
      SPRING_DATASOURCE_USERNAME: taskflow
      SPRING_DATASOURCE_PASSWORD: taskflowpw
      SPRING_JPA_HIBERNATE_DDL_AUTO: validate
    command: >
      sh -c "
      apt-get update && apt-get install -y netcat &&
      echo 'Aguardando MySQL...' &&
      while ! nc -z mysql 3306; do
        echo 'MySQL indisponível - esperando...'
        sleep 2
      done &&
      echo 'MySQL disponível!' &&
      
      if [ -f pom.xml ]; then
        echo 'pom.xml encontrado, iniciando aplicação Spring Boot...' &&
        mvn spring-boot:run
      else
        echo 'ERRO: pom.xml não encontrado! Verifique o volume montado.' &&
        exit 1
      fi    "
    depends_on:
      - mysql
    networks:
      - timeoff_network
    restart: on-failure

  frontend:
    image: node:20-alpine
    container_name: timeoff-frontend
    working_dir: /app
    ports:
      - "3000:3000"
    volumes:
      - ../timeoff-front:/app
      - /app/node_modules
    command: >
      sh -c "
        if [ -f package.json ]; then
          echo 'package.json encontrado. Instalando dependências...'
          npm install
          echo 'Iniciando o servidor de desenvolvimento React...'
          npm start
        else
          echo 'ERRO: package.json não encontrado! Verifique o volume montado.'
          exit 1
        fi
      "
    depends_on:
      - api
    networks:
      - timeoff_network
    restart: on-failure

  mysql:
    image: mysql:latest
    container_name: mysql
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: taskflowdb
      MYSQL_USER: taskflow
      MYSQL_PASSWORD: taskflowpw
    ports:
      - "3307:3306"
    volumes:
      - mysql_data:/var/lib/mysql
    networks:
      - timeoff_network

  adminer:
    image: adminer
    container_name: adminer
    restart: always
    ports:
      - "8081:8080"
    networks:
      - timeoff_network
    depends_on:
      - mysql

volumes:
  mysql_data: